#Область ПрограммныйИнтерфейс

Функция СформироватьОтчет(ПараметрыОтчета) Экспорт
	
	Результат  = Новый ТабличныйДокумент;
	Макет      = ПолучитьМакет("ТоварыПоКонтрагенту");
	ВывестиШапкуОтчета(ПараметрыОтчета, Макет, Результат);
	ВывестиТаблицу(ПараметрыОтчета, Макет, Результат);
	//ВывестиПодвалОтчета(Макет, Результат, ВсегоЦенаИзделияБезНДС);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ВыводТаблицыОбщий

Процедура ВывестиШапкуОтчета(ПараметрыОтчета, Макет, Результат)
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ПараметрыШапки = Новый Структура;
	ПараметрыШапки.Вставить("Контрагент", ПараметрыОтчета.Контрагент);
	ОбластьШапка.Параметры.Заполнить(ПараметрыШапки);
	Результат.Вывести(ОбластьШапка);
	
КонецПроцедуры

Процедура ВывестиПодвалОтчета(Макет, Результат, ВсегоЦенаИзделияБезНДС)

	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ПараметрыПодвала = Новый Структура;
	ПараметрыПодвала.Вставить("ВсегоЦенаИзделияБезНДС", ВсегоЦенаИзделияБезНДС);
	ПараметрыПодвала.Вставить("Пользователь",           Пользователи.ТекущийПользователь());
	ПараметрыПодвала.Вставить("Дата",                   Формат(ТекущаяДатаСеанса(), "ДФ=dd.MM.yy"));
	ОбластьПодвал.Параметры.Заполнить(ПараметрыПодвала);
	Результат.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ВывестиТаблицу(ПараметрыОтчета, Макет, Результат)
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыПродукция");
	Результат.Вывести(ОбластьШапкаТаблицы);
	
	ОбластьСтрокиТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицыПродукция");
	ИтогоЦенаИзделия = 0;
	НомерПоПорядку   = 0;
	Отступ           = 0;
	
	// Комплектация, указанная в отборе отчета
	Для Каждого СтрокаКомплектации Из ДанныеКомплектации(ПараметрыОтчета.Комплектация) Цикл
		
		НомерПоПорядку = НомерПоПорядку + 1;
		ВывестиСтрокуКомплектации(
			СтрокаКомплектации,
			НомерПоПорядку,
			ИтогоЦенаИзделия,
			Отступ,
			Результат,
			ОбластьСтрокиТаблицы);
		
	КонецЦикла;
	
	// Выведем итог таблицы
	ОбластьИтогоТаблицы = Макет.ПолучитьОбласть("ИтогТаблицыПродукция");
	ОбластьИтогоТаблицы.Параметры.ИтогоЦенаИзделияБезНДСПродукция = ИтогоЦенаИзделия;
	Результат.Вывести(ОбластьИтогоТаблицы);
	
	ВсегоЦенаИзделияБезНДС = ВсегоЦенаИзделияБезНДС + ИтогоЦенаИзделия;
	
КонецПроцедуры

Процедура ВывестиСтрокуКомплектации(СтрокаКомплектации, НомерПоПорядку, ИтогоЦенаИзделия, Отступ, Результат, ОбластьСтрокиТаблицы)
	
	Если Отступ > 4 Тогда
		// Ограничим глубину, чтобы не произошло зацикливание
		// Зацикливание может произойти, если, например, 
		// какая-то деталь указана как комплектующая к самой себе.
		ТекстСообщенияПользователю = СтрШаблон(
			"Показана детализация до 4 уровня.
			|Для %1 не показана детальная информация",
			СтрокаКомплектации.Номенклатура);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияПользователю);
		Возврат;
	КонецЕсли;
	
	// Формируем данные по строке комплектации
	ДанныеНоменклатуры = НовыйДанныеНоменклатуры();
	ЗаполнитьЗначенияСвойств(ДанныеНоменклатуры, СтрокаКомплектации);
	ДанныеНоменклатуры.НомерПоПорядку = НомерПоПорядку;
	ДанныеНоменклатуры.КД             = ?(ПустаяСтрока(ДанныеНоменклатуры.КД), 0, Число(ДанныеНоменклатуры.КД)); 
	
	// Если в номенклатуре не указана стоимость, то берем её из исходного сырья
	Если ДанныеНоменклатуры.ЦенаЕдиницы = 0 И СтрокаКомплектации.СтоимостьИсходногоСырья <> 0 Тогда
		// Все данные берем из исходного сырья, включая массу заготовки и КД
		ДанныеНоменклатуры.ЦенаЕдиницы    = СтрокаКомплектации.СтоимостьИсходногоСырья;
		ДанныеНоменклатуры.МассаЗаготовки = СтрокаКомплектации.МассаИсходногоСырья;
		ДанныеНоменклатуры.КД             = ?(ПустаяСтрока(СтрокаКомплектации.КДИсходногоСырья), 0, Число(СтрокаКомплектации.КДИсходногоСырья));
		Если ДанныеНоменклатуры.КД = 0 Тогда
			ДанныеНоменклатуры.КД = 1;
		КонецЕсли;
		ЦенаБезНДС        = (ДанныеНоменклатуры.ЦенаЕдиницы * ДанныеНоменклатуры.МассаЗаготовки) / ДанныеНоменклатуры.КД;
		ЦенаИзделияБезНДС = ЦенаБезНДС * ДанныеНоменклатуры.КоличествоНаЕдиницу;
	ИначеЕсли ДанныеНоменклатуры.КД = 0 Тогда
		ЦенаБезНДС        = ДанныеНоменклатуры.ЦенаЕдиницы;
		ЦенаИзделияБезНДС = ДанныеНоменклатуры.ЦенаЕдиницы * ДанныеНоменклатуры.КоличествоНаЕдиницу;
	Иначе
		ЦенаБезНДС        = ДанныеНоменклатуры.ЦенаЕдиницы
			+ ((СтрокаКомплектации.СтоимостьИсходногоСырья * ДанныеНоменклатуры.МассаЗаготовки) / ДанныеНоменклатуры.КД);
		ЦенаИзделияБезНДС = (ДанныеНоменклатуры.ЦенаЕдиницы / ДанныеНоменклатуры.КД) * ДанныеНоменклатуры.КоличествоНаЕдиницу;
	КонецЕсли;
	ДанныеНоменклатуры.ЦенаБезНДС        = Окр(ЦенаБезНДС, 2);
	ДанныеНоменклатуры.ЦенаИзделияБезНДС = Окр(ЦенаИзделияБезНДС, 2);
	
	// Если есть подчиненная комплектация, то укажем, что текущая номенклатура - Сборочная единица
	Если ЗначениеЗаполнено(СтрокаКомплектации.ПодчиненнаяКомплектация) Тогда
		ДанныеНоменклатуры.МаркаМеталла = "Сборочная единица";
	КонецЕсли;
	
	// Выводим информация по строке
	ОбластьСтрокиТаблицы.Параметры.Заполнить(ДанныеНоменклатуры);
	ОбластьСтрокиТаблицы.Области.Номенклатура.Отступ = Отступ;
	Результат.Вывести(ОбластьСтрокиТаблицы);
	ИтогоЦенаИзделия = ИтогоЦенаИзделия + ДанныеНоменклатуры.ЦенаИзделияБезНДС;
	
	// Выводим информация о подчиненной комплектации
	Если ЗначениеЗаполнено(СтрокаКомплектации.ПодчиненнаяКомплектация) Тогда
		// Сдвигаем подчиненную строку
		НовыйОтступ               = Отступ + 1;
		ПодчиненныйНомерПоПорядку = 0;
		Для Каждого СтрокаПодчиненнойКомплектации Из ДанныеКомплектации(СтрокаКомплектации.ПодчиненнаяКомплектация) Цикл
			// Формируем новый номер по порядку с учетом иерархии
			ПодчиненныйНомерПоПорядку = ПодчиненныйНомерПоПорядку + 1;
			НовыйНомерПоПорядку = СтрШаблон("%1.%2", НомерПоПорядку, ПодчиненныйНомерПоПорядку);
			// Выводим строку подчиненной комплектации
			ВывестиСтрокуКомплектации(
				СтрокаПодчиненнойКомплектации,
				НовыйНомерПоПорядку,
				ИтогоЦенаИзделия,
				НовыйОтступ,
				Результат,
				ОбластьСтрокиТаблицы);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиТаблицаМатериалы(ПараметрыОтчета, Макет, Результат, ВсегоЦенаИзделияБезНДС)
	
	ДанныеМатериалов = ДанныеМатериалов(ПараметрыОтчета);
	// Если состав материалов не заполнен, то ничего не делаем
	Если ДанныеМатериалов.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	// Выводим шапку таблицы
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыМатериалы");
	Результат.Вывести(ОбластьШапкаТаблицы);
	
	// Выводим строку материалов
	ОбластьСтрокиТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицыМатериалы");
	ИтогоЦенаИзделия     = 0;
	НомерПоПорядку       = 0;
	Для Каждого СтрокаМатериалы Из ДанныеМатериалов Цикл
		НомерПоПорядку  = НомерПоПорядку + 1;
		ДанныеМатериала = НовыйДанныеМатериала();
		ЗаполнитьЗначенияСвойств(ДанныеМатериала, СтрокаМатериалы);
		// Уточняем данные по материалам
		ДанныеМатериала.НомерПоПорядку = НомерПоПорядку;
		ДанныеМатериала.КД             = ?(ПустаяСтрока(ДанныеМатериала.КД), 0, Число(ДанныеМатериала.КД)); 
		ДанныеМатериала.МассаЗаготовки = ?(ДанныеМатериала.МассаЗаготовки = 0, 1, ДанныеМатериала.МассаЗаготовки); // если масса заготовки не указана, то используем 1
		ДанныеМатериала.ЦенаЕдиницы    = ДанныеМатериала.СтоимостьМатериала * ДанныеМатериала.МассаЗаготовки;
		Если ДанныеМатериала.КД = 0 Тогда
			ЦенаИзделияБезНДС = ДанныеМатериала.ЦенаЕдиницы * ДанныеМатериала.КоличествоНаЕдиницу;
		Иначе
			ЦенаИзделияБезНДС = (ДанныеМатериала.ЦенаЕдиницы / ДанныеМатериала.КД) * ДанныеМатериала.КоличествоНаЕдиницу;
		КонецЕсли;
		ДанныеМатериала.ЦенаИзделияБезНДС = Окр(ЦенаИзделияБезНДС, 2);
		// Выводим строку с материалом
		ОбластьСтрокиТаблицы.Параметры.Заполнить(ДанныеМатериала);
		Результат.Вывести(ОбластьСтрокиТаблицы);
		
		ИтогоЦенаИзделия = ИтогоЦенаИзделия + ДанныеМатериала.ЦенаИзделияБезНДС;
	КонецЦикла;
	// Выводим итог по таблице
	ОбластьИтогоТаблицы = Макет.ПолучитьОбласть("ИтогТаблицыМатериалы");
	ОбластьИтогоТаблицы.Параметры.ИтогоЦенаИзделияБезНДСМатериалы = ИтогоЦенаИзделия;
	Результат.Вывести(ОбластьИтогоТаблицы);
	
	ВсегоЦенаИзделияБезНДС = ВсегоЦенаИзделияБезНДС + ИтогоЦенаИзделия;
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхИБ

Функция ДанныеКомплектации(Комплектация)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Комплектация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Каргополье_КомплектацииСостав.Ссылка,
	|	Каргополье_КомплектацииСостав.Номенклатура,
	|	Каргополье_КомплектацииСостав.Количество КАК КоличествоНаЕдиницу,
	|	СправочникНоменклатура.Каргополье_Комплектация КАК ПодчиненнаяКомплектация,
	|	СправочникНоменклатура.Каргополье_Стоимость КАК ЦенаЕдиницы,
	|	СправочникНоменклатура.Каргополье_МассаЗаготовки КАК МассаЗаготовки,
	|	СправочникНоменклатура.Каргополье_ОбозначениеДетали КАК ОбозначениеДетали,
	|	СправочникНоменклатура.Каргополье_КД КАК КД,
	|	СправочникНоменклатура.Каргополье_ИсходноеСырье КАК МаркаМеталла,
	|	СправочникНоменклатура.Наименование,
	|	ЕСТЬNULL(СправочникНоменклатура.Каргополье_ИсходноеСырье.Каргополье_Стоимость, 0) КАК СтоимостьИсходногоСырья,
	|	ЕСТЬNULL(СправочникНоменклатура.Каргополье_ИсходноеСырье.Каргополье_МассаЗаготовки, 0) КАК МассаИсходногоСырья,
	|	ЕСТЬNULL(СправочникНоменклатура.Каргополье_ИсходноеСырье.Каргополье_КД, 1) КАК КДИсходногоСырья,
	|	СправочникНоменклатура.ЕдиницаИзмерения
	|ИЗ
	|	Справочник.Каргополье_Комплектации.Состав КАК Каргополье_КомплектацииСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Каргополье_КомплектацииСостав.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Каргополье_КомплектацииСостав.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ДанныеМатериалов(ПараметрыОтчета)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ПараметрыОтчета.Комплектация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Каргополье_КомплектацииСоставМатериалы.Номенклатура,
	|	Каргополье_КомплектацииСоставМатериалы.Количество КАК КоличествоНаЕдиницу,
	|	Каргополье_КомплектацииСоставМатериалы.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Каргополье_КомплектацииСоставМатериалы.Номенклатура.Каргополье_Стоимость КАК СтоимостьМатериала,
	|	Каргополье_КомплектацииСоставМатериалы.Номенклатура.Каргополье_КД КАК КД,
	|	""Материал"" КАК ТипМатериала,
	|	Каргополье_КомплектацииСоставМатериалы.Номенклатура.Каргополье_МассаЗаготовки КАК МассаЗаготовки
	|ИЗ
	|	Справочник.Каргополье_Комплектации.СоставМатериалы КАК Каргополье_КомплектацииСоставМатериалы
	|ГДЕ
	|	Каргополье_КомплектацииСоставМатериалы.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

#КонецОбласти

#Область Конструкторы

Функция НовыйДанныеНоменклатуры()
	
	Возврат Новый Структура(
		"НомерПоПорядку,
		|Номенклатура,
		|ОбозначениеДетали,
		|ЕдиницаИзмерения,
		|КоличествоНаЕдиницу,
		|МаркаМеталла,
		|ЦенаЕдиницы,
		|МассаЗаготовки,
		|ЦенаБезНДС,
		|ЦенаИзделияБезНДС,
		|КД");
		
КонецФункции

Функция НовыйДанныеМатериала()
	
	Возврат Новый Структура(
		"НомерПоПорядку,
		|Номенклатура,
		|ОбозначениеДетали,
		|ЕдиницаИзмерения,
		|КоличествоНаЕдиницу,
		|ТипМатериала,
		|ЦенаЕдиницы,
		|ЦенаИзделияБезНДС,
		|КД,
		|МассаЗаготовки, 
		|СтоимостьМатериала");
		
КонецФункции

#КонецОбласти
